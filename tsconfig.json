{
  "compilerOptions": {
    // 工作根目录
    "baseUrl": ".",
    // 指定模块的路径，和 baseUrl 有关联，和 webpack 中 resolve.alias 配置一样(paths 必须设置 baseUrl)
    "paths": {
      // 配置别名 vscode 才能自动加载别名路径
      "@/*": ["src/*"],
      // 指定后可以在文件之直接 import * from 'src';
      "src": [
        "./src"
      ],
    },
    // 用来指定要使用的模板标准
    "module": "esnext",
    // 用于指定编译之后的版本
    "target": "esnext",
    // 用于选择模块解析策略，有"node"和"classic"两种类型
    "moduleResolution": "node",
    // 用于指定是否启动所有类型检查 严格模式
    "strict": true,
    // 用于检查是否有定义了但是没有使用变量
    "noUnusedLocals": true,
    // 通过导入内容创建命名空间，实现CommonJS和ES模块之间的互操作性
    "esModuleInterop": true,
    // 用来指定是否允许编译JS文件
    "allowJs": true,
    // 用来指定声明文件或文件夹的路径列表，如果指定了此项，则只有在这里列出的声明文件才会被加载
    "typeRoots": [
      "./types",
      "./node_modules/vue/types"
    ],
    // 不报告执行不到的代码错误。
    "allowUnreachableCode": true,
    // 不报告未使用的标签错误
    "allowUnusedLabels": false,
    // 以严格模式解析并为每个源文件生成 "use strict"语句
    "alwaysStrict": false,
    // 启用实验性的ES装饰器
    "experimentalDecorators": true,
    // 是否生成map文件
    "sourceMap": true,
    // 是否默认禁用 any
    "noImplicitAny": false,
    // 是否移除注释
    "removeComments": true,
    // 输出目录
    "outDir": "./ts/dist",
    // 是否自动创建类型声明文件
    "declaration": true,
    // 类型声明文件的输出目录
    "declarationDir": "./ts/lib",
    // 编译过程中需要引入的库文件的列表
    "lib": [
      "es5",
      "es2015",
      "es2016",
      "es2017",
      "es2018",
      "dom"
    ]
  },
  // 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件）
  //  "include": [
  //    "packages/**/*",
  //    "src/**/*"
  //  ],
  // 表示要排除的，不编译的文件（include的反向操作）
  "exclude": [
    "node_modules"
  ]
}
